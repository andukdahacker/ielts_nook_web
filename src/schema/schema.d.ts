/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/me/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get me */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                center?: {
                                    id: string;
                                    email: string;
                                    name: string;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                                user?: {
                                    id: string;
                                    email: string;
                                    /** @default null */
                                    username: string | null;
                                    /** @default null */
                                    firstName: string | null;
                                    /** @default null */
                                    lastName: string | null;
                                    centerId: string;
                                    role: "ADMIN" | "TEACHER" | "STUDENT";
                                    /** @default null */
                                    phoneNumber: string | null;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/center/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Register a center */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        email: string;
                        name: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                center: {
                                    id: string;
                                    email: string;
                                    name: string;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/center/signIn": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sign in a center */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        idToken: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                token: string;
                                center: {
                                    id: string;
                                    email: string;
                                    name: string;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/center/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get current center */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                center: {
                                    id: string;
                                    email: string;
                                    name: string;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Update a user */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        userId: string;
                        username?: string;
                        firstName?: string;
                        lastName?: string;
                        phoneNumber?: string;
                        role?: "ADMIN" | "TEACHER" | "STUDENT";
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                user: {
                                    id: string;
                                    email: string;
                                    /** @default null */
                                    username: string | null;
                                    /** @default null */
                                    firstName: string | null;
                                    /** @default null */
                                    lastName: string | null;
                                    centerId: string;
                                    role: "ADMIN" | "TEACHER" | "STUDENT";
                                    /** @default null */
                                    phoneNumber: string | null;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        /** @description Create a user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        email: string;
                        password: string;
                        role: "ADMIN" | "TEACHER" | "STUDENT";
                        username?: string;
                        firstName?: string;
                        lastName?: string;
                        phoneNumber?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                user: {
                                    id: string;
                                    email: string;
                                    /** @default null */
                                    username: string | null;
                                    /** @default null */
                                    firstName: string | null;
                                    /** @default null */
                                    lastName: string | null;
                                    centerId: string;
                                    role: "ADMIN" | "TEACHER" | "STUDENT";
                                    /** @default null */
                                    phoneNumber: string | null;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get a user */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: string;
                                email: string;
                                /** @default null */
                                username: string | null;
                                /** @default null */
                                firstName: string | null;
                                /** @default null */
                                lastName: string | null;
                                centerId: string;
                                role: "ADMIN" | "TEACHER" | "STUDENT";
                                /** @default null */
                                phoneNumber: string | null;
                                createdAt: unknown;
                                updatedAt: unknown;
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user/{userId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** @description Delete a user */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    userId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get list of users */
        get: {
            parameters: {
                query: {
                    take: number;
                    cursor?: string;
                    searchString?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data?: {
                                nodes: {
                                    user: {
                                        id: string;
                                        email: string;
                                        /** @default null */
                                        username: string | null;
                                        /** @default null */
                                        firstName: string | null;
                                        /** @default null */
                                        lastName: string | null;
                                        centerId: string;
                                        role: "ADMIN" | "TEACHER" | "STUDENT";
                                        /** @default null */
                                        phoneNumber: string | null;
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    };
                                    classes: {
                                        id: string;
                                        name: string;
                                        /** @default null */
                                        description: string | null;
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    }[];
                                }[];
                                pageInfo: {
                                    hasNextPage: boolean;
                                    cursor?: string;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user/signIn": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sign in a user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        email: string;
                        password: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                token: string;
                                user: {
                                    id: string;
                                    email: string;
                                    /** @default null */
                                    username: string | null;
                                    /** @default null */
                                    firstName: string | null;
                                    /** @default null */
                                    lastName: string | null;
                                    centerId: string;
                                    role: "ADMIN" | "TEACHER" | "STUDENT";
                                    /** @default null */
                                    phoneNumber: string | null;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/class/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Update a class */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        classId: string;
                        name?: string;
                        description?: string;
                        addMembers?: string[];
                        removeMembers?: string[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                class: {
                                    id: string;
                                    name: string;
                                    /** @default null */
                                    description: string | null;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        /** @description Create a class */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        name: string;
                        description?: string;
                        classMember: string[];
                        centerId: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                class: {
                                    id: string;
                                    name: string;
                                    /** @default null */
                                    description: string | null;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/class/{classId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get a class */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    classId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                class: {
                                    id: string;
                                    name: string;
                                    /** @default null */
                                    description: string | null;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                                classMembers: {
                                    user: {
                                        id: string;
                                        email: string;
                                        /** @default null */
                                        username: string | null;
                                        /** @default null */
                                        firstName: string | null;
                                        /** @default null */
                                        lastName: string | null;
                                        centerId: string;
                                        role: "ADMIN" | "TEACHER" | "STUDENT";
                                        /** @default null */
                                        phoneNumber: string | null;
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    };
                                    assignments: {
                                        assignment: {
                                            id: string;
                                            title: string;
                                            /** @default null */
                                            dueDate: unknown | null;
                                            classMemberClassId: string;
                                            classMemberUserId: string;
                                            exerciseId: string;
                                            status: "ASSIGNED" | "SUBMITTED" | "REVIEWED";
                                            createdAt: unknown;
                                            updatedAt: unknown;
                                        };
                                        /** @default null */
                                        submission: {
                                            id: string;
                                            assignmentId: string;
                                            content: unknown;
                                            grade: unknown;
                                            feedback: unknown;
                                            createdAt: unknown;
                                            updatedAt: unknown;
                                        } | null;
                                        exercise: {
                                            id: string;
                                            name: string;
                                            type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                                            content: unknown;
                                            /** @default null */
                                            centerId: string | null;
                                            createdAt: unknown;
                                            updatedAt: unknown;
                                        };
                                    }[];
                                }[];
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** @description Delete a class */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    classId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/class/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get class list */
        get: {
            parameters: {
                query: {
                    take: number;
                    cursor?: string;
                    centerId: string;
                    searchString?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data?: {
                                nodes: {
                                    class: {
                                        id: string;
                                        name: string;
                                        /** @default null */
                                        description: string | null;
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    };
                                    members: {
                                        id: string;
                                        email: string;
                                        /** @default null */
                                        username: string | null;
                                        /** @default null */
                                        firstName: string | null;
                                        /** @default null */
                                        lastName: string | null;
                                        centerId: string;
                                        role: "ADMIN" | "TEACHER" | "STUDENT";
                                        /** @default null */
                                        phoneNumber: string | null;
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    }[];
                                }[];
                                pageInfo: {
                                    hasNextPage: boolean;
                                    cursor?: string;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/class/list/user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get class list by user id */
        get: {
            parameters: {
                query: {
                    userId: string;
                    take: number;
                    cursor?: string;
                    searchString?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data?: {
                                nodes: {
                                    class: {
                                        id: string;
                                        name: string;
                                        /** @default null */
                                        description: string | null;
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    };
                                    members: {
                                        id: string;
                                        email: string;
                                        /** @default null */
                                        username: string | null;
                                        /** @default null */
                                        firstName: string | null;
                                        /** @default null */
                                        lastName: string | null;
                                        centerId: string;
                                        role: "ADMIN" | "TEACHER" | "STUDENT";
                                        /** @default null */
                                        phoneNumber: string | null;
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    }[];
                                }[];
                                pageInfo: {
                                    hasNextPage: boolean;
                                    cursor?: string;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/class/{classId}/member/{userId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get class member details */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    userId: string;
                    classId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                /** ClassMember */
                                classMember: {
                                    classId: string;
                                    userId: string;
                                };
                                user: {
                                    id: string;
                                    email: string;
                                    /** @default null */
                                    username: string | null;
                                    /** @default null */
                                    firstName: string | null;
                                    /** @default null */
                                    lastName: string | null;
                                    centerId: string;
                                    role: "ADMIN" | "TEACHER" | "STUDENT";
                                    /** @default null */
                                    phoneNumber: string | null;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                                assignments: {
                                    assignment: {
                                        id: string;
                                        title: string;
                                        /** @default null */
                                        dueDate: unknown | null;
                                        classMemberClassId: string;
                                        classMemberUserId: string;
                                        exerciseId: string;
                                        status: "ASSIGNED" | "SUBMITTED" | "REVIEWED";
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    };
                                    /** @default null */
                                    submission: {
                                        id: string;
                                        assignmentId: string;
                                        content: unknown;
                                        grade: unknown;
                                        feedback: unknown;
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    } | null;
                                    exercise: {
                                        id: string;
                                        name: string;
                                        type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                                        content: unknown;
                                        /** @default null */
                                        centerId: string | null;
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    };
                                }[];
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/exercise/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Update an exercise */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        id: string;
                        name?: string;
                        content: unknown;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: string;
                                name: string;
                                type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                                content: unknown;
                                /** @default null */
                                centerId: string | null;
                                createdAt: unknown;
                                updatedAt: unknown;
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        /** @description Create an exercise */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        name: string;
                        content: unknown;
                        type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                exercise: {
                                    id: string;
                                    name: string;
                                    type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                                    content: unknown;
                                    /** @default null */
                                    centerId: string | null;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/exercise/deleteListeningFile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** @description Delete listening file for an exercise */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        id: string;
                        key: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/exercise/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get an exercise with id */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                exercise: {
                                    id: string;
                                    name: string;
                                    type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                                    content: unknown;
                                    /** @default null */
                                    centerId: string | null;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** @description Delete an exercise */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/exercise/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get list of exercises */
        get: {
            parameters: {
                query: {
                    take: number;
                    cursor?: string;
                    type?: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                    isPublic: boolean;
                    searchString?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data?: {
                                nodes: {
                                    id: string;
                                    name: string;
                                    type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                                    content: unknown;
                                    /** @default null */
                                    centerId: string | null;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                }[];
                                pageInfo: {
                                    hasNextPage: boolean;
                                    cursor?: string;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/exercise/uploadListeningFile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Upload listening file for an exercise */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "multipart/form-data": {
                        id: string;
                        fileName: string;
                        file: unknown;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: string;
                                name: string;
                                type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                                content: unknown;
                                /** @default null */
                                centerId: string | null;
                                createdAt: unknown;
                                updatedAt: unknown;
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/exercise/uploadWritingImage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Upload image for an exercise */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "multipart/form-data": {
                        id: string;
                        fileName: string;
                        file: unknown;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: string;
                                name: string;
                                type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                                content: unknown;
                                /** @default null */
                                centerId: string | null;
                                createdAt: unknown;
                                updatedAt: unknown;
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/exercise/writingImage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** @description Delete writing image */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        id: string;
                        key: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/assignment/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Update assignments */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        id: string;
                        title?: string;
                        dueDate?: unknown;
                        status?: "ASSIGNED" | "SUBMITTED" | "REVIEWED";
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: string;
                                title: string;
                                /** @default null */
                                dueDate: unknown | null;
                                classMemberClassId: string;
                                classMemberUserId: string;
                                exerciseId: string;
                                status: "ASSIGNED" | "SUBMITTED" | "REVIEWED";
                                createdAt: unknown;
                                updatedAt: unknown;
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        /** @description Create assigments */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        title: string;
                        exerciseId: string;
                        dueDate?: unknown;
                        students: {
                            classId: string;
                            userId: string;
                        }[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                assignments: {
                                    id: string;
                                    title: string;
                                    /** @default null */
                                    dueDate: unknown | null;
                                    classMemberClassId: string;
                                    classMemberUserId: string;
                                    exerciseId: string;
                                    status: "ASSIGNED" | "SUBMITTED" | "REVIEWED";
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                }[];
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        /** @description Delete assignment */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        id: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/assignment/exercise": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get assignments by exercise */
        get: {
            parameters: {
                query?: {
                    exerciseId?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                assignments: {
                                    assignment: {
                                        id: string;
                                        title: string;
                                        /** @default null */
                                        dueDate: unknown | null;
                                        classMemberClassId: string;
                                        classMemberUserId: string;
                                        exerciseId: string;
                                        status: "ASSIGNED" | "SUBMITTED" | "REVIEWED";
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    };
                                    user: {
                                        id: string;
                                        email: string;
                                        /** @default null */
                                        username: string | null;
                                        /** @default null */
                                        firstName: string | null;
                                        /** @default null */
                                        lastName: string | null;
                                        centerId: string;
                                        role: "ADMIN" | "TEACHER" | "STUDENT";
                                        /** @default null */
                                        phoneNumber: string | null;
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    };
                                    class: {
                                        id: string;
                                        name: string;
                                        /** @default null */
                                        description: string | null;
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    };
                                }[];
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/assignment/student": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get student's assignments */
        get: {
            parameters: {
                query: {
                    userId: string;
                    take: number;
                    cursor?: string;
                    searchString?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data?: {
                                nodes: {
                                    assignment: {
                                        id: string;
                                        title: string;
                                        /** @default null */
                                        dueDate: unknown | null;
                                        classMemberClassId: string;
                                        classMemberUserId: string;
                                        exerciseId: string;
                                        status: "ASSIGNED" | "SUBMITTED" | "REVIEWED";
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    };
                                    class: {
                                        id: string;
                                        name: string;
                                        /** @default null */
                                        description: string | null;
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    };
                                    exercise: {
                                        id: string;
                                        name: string;
                                        type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                                        content: unknown;
                                        /** @default null */
                                        centerId: string | null;
                                        createdAt: unknown;
                                        updatedAt: unknown;
                                    };
                                }[];
                                pageInfo: {
                                    hasNextPage: boolean;
                                    cursor?: string;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/assignment/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get assignment */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                assignment: {
                                    id: string;
                                    title: string;
                                    /** @default null */
                                    dueDate: unknown | null;
                                    classMemberClassId: string;
                                    classMemberUserId: string;
                                    exerciseId: string;
                                    status: "ASSIGNED" | "SUBMITTED" | "REVIEWED";
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                                exercise: {
                                    id: string;
                                    name: string;
                                    type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                                    content: unknown;
                                    /** @default null */
                                    centerId: string | null;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                                /** @default null */
                                submission: {
                                    id: string;
                                    assignmentId: string;
                                    content: unknown;
                                    grade: unknown;
                                    feedback: unknown;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                } | null;
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/submission/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Update submission */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        id: string;
                        content?: unknown;
                        grade?: unknown;
                        feedback?: unknown;
                        isReviewed?: boolean;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                submission: {
                                    id: string;
                                    assignmentId: string;
                                    content: unknown;
                                    grade: unknown;
                                    feedback: unknown;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                                exercise: {
                                    id: string;
                                    name: string;
                                    type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                                    content: unknown;
                                    /** @default null */
                                    centerId: string | null;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                                assignment: {
                                    id: string;
                                    title: string;
                                    /** @default null */
                                    dueDate: unknown | null;
                                    classMemberClassId: string;
                                    classMemberUserId: string;
                                    exerciseId: string;
                                    status: "ASSIGNED" | "SUBMITTED" | "REVIEWED";
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        /** @description Create submission */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        assignmentId: string;
                        content: unknown;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: string;
                                assignmentId: string;
                                content: unknown;
                                grade: unknown;
                                feedback: unknown;
                                createdAt: unknown;
                                updatedAt: unknown;
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/submission/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get list of submissions */
        get: {
            parameters: {
                query: {
                    take: number;
                    cursor?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data?: {
                                nodes: {
                                    id: string;
                                    assignmentId: string;
                                    content: unknown;
                                    grade: unknown;
                                    feedback: unknown;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                }[];
                                pageInfo: {
                                    hasNextPage: boolean;
                                    cursor?: string;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/submission/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get submission */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                submission: {
                                    id: string;
                                    assignmentId: string;
                                    content: unknown;
                                    grade: unknown;
                                    feedback: unknown;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                                exercise: {
                                    id: string;
                                    name: string;
                                    type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                                    content: unknown;
                                    /** @default null */
                                    centerId: string | null;
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                                assignment: {
                                    id: string;
                                    title: string;
                                    /** @default null */
                                    dueDate: unknown | null;
                                    classMemberClassId: string;
                                    classMemberUserId: string;
                                    exerciseId: string;
                                    status: "ASSIGNED" | "SUBMITTED" | "REVIEWED";
                                    createdAt: unknown;
                                    updatedAt: unknown;
                                };
                            };
                            message: string;
                        };
                    };
                };
                /** @description Default Response */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Center */
        Center: {
            id: string;
            email: string;
            name: string;
            createdAt: unknown;
            updatedAt: unknown;
        };
        /** RegisterCenterInput */
        RegisterCenterInput: {
            email: string;
            name: string;
        };
        /** SignInCenterInput */
        SignInCenterInput: {
            idToken: string;
        };
        /** UserRole */
        UserRole: "ADMIN" | "TEACHER" | "STUDENT";
        /** User */
        User: {
            id: string;
            email: string;
            /** @default null */
            username: string | null;
            /** @default null */
            firstName: string | null;
            /** @default null */
            lastName: string | null;
            centerId: string;
            role: "ADMIN" | "TEACHER" | "STUDENT";
            /** @default null */
            phoneNumber: string | null;
            createdAt: unknown;
            updatedAt: unknown;
        };
        /** CreateUserInput */
        CreateUserInput: {
            email: string;
            password: string;
            role: "ADMIN" | "TEACHER" | "STUDENT";
            username?: string;
            firstName?: string;
            lastName?: string;
            phoneNumber?: string;
        };
        /** GetUserListInput */
        GetUserListInput: {
            take: number;
            cursor?: string;
            searchString?: string;
        };
        /** SignInUserInput */
        SignInUserInput: {
            email: string;
            password: string;
        };
        /** UpdateUserInput */
        UpdateUserInput: {
            userId: string;
            username?: string;
            firstName?: string;
            lastName?: string;
            phoneNumber?: string;
            role?: "ADMIN" | "TEACHER" | "STUDENT";
        };
        /** Class */
        Class: {
            id: string;
            name: string;
            /** @default null */
            description: string | null;
            createdAt: unknown;
            updatedAt: unknown;
        };
        /** GetClassListInput */
        GetClassListInput: {
            take: number;
            cursor?: string;
            centerId: string;
            searchString?: string;
        };
        /** UpdateClassInput */
        UpdateClassInput: {
            classId: string;
            name?: string;
            description?: string;
            addMembers?: string[];
            removeMembers?: string[];
        };
        /** GetClassListByUserInput */
        GetClassListByUserInput: {
            userId: string;
            take: number;
            cursor?: string;
            searchString?: string;
        };
        /** GetClassMemberInput */
        GetClassMemberInput: {
            userId: string;
            classId: string;
        };
        /** ReadingExercise */
        ReadingExercise: {
            title: string;
            content: unknown;
            tasks: ({
                order: number;
                type: "Multiple choice" | "True/False/Not Given" | "Yes/No/Not Given" | "Summary Completion" | "Sentence Completion" | "Note Completion" | "Tabel Completion" | "Flowchart Completion" | "Matching heading to paragraph";
                instructions: unknown;
                questions: {
                    content: string;
                    correctAnswer: string;
                    order: number;
                    options: {
                        content: string;
                        order: number;
                        value: string;
                    }[];
                }[];
            } | {
                order: number;
                type: "Multiple choice" | "True/False/Not Given" | "Yes/No/Not Given" | "Summary Completion" | "Sentence Completion" | "Note Completion" | "Tabel Completion" | "Flowchart Completion" | "Matching heading to paragraph";
                instructions: unknown;
                questions: {
                    order: number;
                    content: string;
                    /** ReadingTFNGOption */
                    correctAnswer: "TRUE" | "FALSE" | "NOT GIVEN";
                }[];
            } | {
                order: number;
                type: "Multiple choice" | "True/False/Not Given" | "Yes/No/Not Given" | "Summary Completion" | "Sentence Completion" | "Note Completion" | "Tabel Completion" | "Flowchart Completion" | "Matching heading to paragraph";
                instruction: unknown;
                title: string;
                content: string;
                questions: {
                    order: number;
                    options: {
                        order: number;
                        value: string;
                        content: string;
                    }[];
                    correctAnswer: string;
                }[];
            } | {
                order: number;
                instructions: unknown;
                type: "Multiple choice" | "True/False/Not Given" | "Yes/No/Not Given" | "Summary Completion" | "Sentence Completion" | "Note Completion" | "Tabel Completion" | "Flowchart Completion" | "Matching heading to paragraph";
                questions: {
                    order: number;
                    content: string;
                    /** ReadingYNNGOption */
                    correctAnswer: "YES" | "NO" | "NOT GIVEN";
                }[];
            } | {
                order: number;
                instruction: unknown;
                questions: {
                    order: number;
                    correctAnswer: string;
                }[];
                type: "Multiple choice" | "True/False/Not Given" | "Yes/No/Not Given" | "Summary Completion" | "Sentence Completion" | "Note Completion" | "Tabel Completion" | "Flowchart Completion" | "Matching heading to paragraph";
            })[];
        };
        /** ReadingMultipleChoiceTask */
        ReadingMultipleChoiceTask: {
            order: number;
            type: "Multiple choice" | "True/False/Not Given" | "Yes/No/Not Given" | "Summary Completion" | "Sentence Completion" | "Note Completion" | "Tabel Completion" | "Flowchart Completion" | "Matching heading to paragraph";
            instructions: unknown;
            questions: {
                content: string;
                correctAnswer: string;
                order: number;
                options: {
                    content: string;
                    order: number;
                    value: string;
                }[];
            }[];
        };
        /** ReadingMultipleChoiceQuestion */
        ReadingMultipleChoiceQuestion: {
            content: string;
            correctAnswer: string;
            order: number;
            options: {
                content: string;
                order: number;
                value: string;
            }[];
        };
        /** ReadingMultipleChoiceQuestionOption */
        ReadingMultipleChoiceQuestionOption: {
            content: string;
            order: number;
            value: string;
        };
        /** ReadingTFNGTask */
        ReadingTFNGTask: {
            order: number;
            type: "Multiple choice" | "True/False/Not Given" | "Yes/No/Not Given" | "Summary Completion" | "Sentence Completion" | "Note Completion" | "Tabel Completion" | "Flowchart Completion" | "Matching heading to paragraph";
            instructions: unknown;
            questions: {
                order: number;
                content: string;
                /** ReadingTFNGOption */
                correctAnswer: "TRUE" | "FALSE" | "NOT GIVEN";
            }[];
        };
        /** ReadingTFNGQuestion */
        ReadingTFNGQuestion: {
            order: number;
            content: string;
            /** ReadingTFNGOption */
            correctAnswer: "TRUE" | "FALSE" | "NOT GIVEN";
        };
        /** ReadingTFNGOption */
        ReadingTFNGOption: "TRUE" | "FALSE" | "NOT GIVEN";
        /** ReadingSummaryCompletionTask */
        ReadingSummaryCompletionTask: {
            order: number;
            type: "Multiple choice" | "True/False/Not Given" | "Yes/No/Not Given" | "Summary Completion" | "Sentence Completion" | "Note Completion" | "Tabel Completion" | "Flowchart Completion" | "Matching heading to paragraph";
            instruction: unknown;
            title: string;
            content: string;
            questions: {
                order: number;
                options: {
                    order: number;
                    value: string;
                    content: string;
                }[];
                correctAnswer: string;
            }[];
        };
        /** ReadingSummaryCompletionQuestion */
        ReadingSummaryCompletionQuestion: {
            order: number;
            options: {
                order: number;
                value: string;
                content: string;
            }[];
            correctAnswer: string;
        };
        /** ReadingSummaryCompletionOption */
        ReadingSummaryCompletionOption: {
            order: number;
            value: string;
            content: string;
        };
        /** ReadingYNNGTask */
        ReadingYNNGTask: {
            order: number;
            instructions: unknown;
            type: "Multiple choice" | "True/False/Not Given" | "Yes/No/Not Given" | "Summary Completion" | "Sentence Completion" | "Note Completion" | "Tabel Completion" | "Flowchart Completion" | "Matching heading to paragraph";
            questions: {
                order: number;
                content: string;
                /** ReadingYNNGOption */
                correctAnswer: "YES" | "NO" | "NOT GIVEN";
            }[];
        };
        /** ReadingYNNGQuestion */
        ReadingYNNGQuestion: {
            order: number;
            content: string;
            /** ReadingYNNGOption */
            correctAnswer: "YES" | "NO" | "NOT GIVEN";
        };
        /** ReadingYNNGOption */
        ReadingYNNGOption: "YES" | "NO" | "NOT GIVEN";
        /** ReadingSentenceCompletionTask */
        ReadingSentenceCompletionTask: {
            order: number;
            instruction: unknown;
            questions: {
                order: number;
                correctAnswer: string;
            }[];
            type: "Multiple choice" | "True/False/Not Given" | "Yes/No/Not Given" | "Summary Completion" | "Sentence Completion" | "Note Completion" | "Tabel Completion" | "Flowchart Completion" | "Matching heading to paragraph";
        };
        /** ReadingSentenceCompletionQuestion */
        ReadingSentenceCompletionQuestion: {
            order: number;
            correctAnswer: string;
        };
        /** ListeningExercise */
        ListeningExercise: {
            file?: {
                url: string;
                key: string;
                fileName: string;
            };
            tasks: {
                order: number;
                type: "Multiple choice" | "True/False/Not Given" | "Yes/No/Not Given" | "Summary Completion" | "Sentence Completion" | "Note Completion" | "Tabel Completion" | "Flowchart Completion" | "Matching heading to paragraph";
                instructions: unknown;
                questions: {
                    content: string;
                    correctAnswer: string;
                    order: number;
                    options: {
                        content: string;
                        order: number;
                        value: string;
                    }[];
                }[];
            }[];
        };
        /** ListeningMultipleChoiceTask */
        ListeningMultipleChoiceTask: {
            order: number;
            type: "Multiple choice" | "True/False/Not Given" | "Yes/No/Not Given" | "Summary Completion" | "Sentence Completion" | "Note Completion" | "Tabel Completion" | "Flowchart Completion" | "Matching heading to paragraph";
            instructions: unknown;
            questions: {
                content: string;
                correctAnswer: string;
                order: number;
                options: {
                    content: string;
                    order: number;
                    value: string;
                }[];
            }[];
        };
        /** ListeningMultipleChoiceQuestion */
        ListeningMultipleChoiceQuestion: {
            content: string;
            correctAnswer: string;
            order: number;
            options: {
                content: string;
                order: number;
                value: string;
            }[];
        };
        /** ListeningMultipleChoiceQuestionOption */
        ListeningMultipleChoiceQuestionOption: {
            content: string;
            order: number;
            value: string;
        };
        /** WritingExercise */
        WritingExercise: {
            /** @default null */
            file: {
                url: string;
                key: string;
                fileName: string;
            } | null;
            /** WritingExerciseType */
            type: "Task 1" | "Task 2";
            title: unknown;
            /** @default null */
            duration: number | null;
        };
        /** WritingExerciseType */
        WritingExerciseType: "Task 1" | "Task 2";
        /** ExerciseType */
        ExerciseType: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
        /** Exercise */
        Exercise: {
            id: string;
            name: string;
            type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
            content: unknown;
            /** @default null */
            centerId: string | null;
            createdAt: unknown;
            updatedAt: unknown;
        };
        /** GetExerciseListInput */
        GetExerciseListInput: {
            take: number;
            cursor?: string;
            type?: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
            isPublic: boolean;
            searchString?: string;
        };
        /** CreateExerciseInput */
        CreateExerciseInput: {
            name: string;
            content: unknown;
            type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
        };
        /** UpdateExerciseInput */
        UpdateExerciseInput: {
            id: string;
            name?: string;
            content: unknown;
        };
        /** CreateExerciseResponseSchema */
        CreateExerciseResponseSchema: {
            data: {
                exercise: {
                    id: string;
                    name: string;
                    type: "READING" | "LISTENING" | "WRITING" | "SPEAKING";
                    content: unknown;
                    /** @default null */
                    centerId: string | null;
                    createdAt: unknown;
                    updatedAt: unknown;
                };
            };
            message: string;
        };
        /** UploadListeningFileInput */
        UploadListeningFileInput: {
            id: string;
            fileName: string;
            file: unknown;
        };
        /** DeleteListeningFileInput */
        DeleteListeningFileInput: {
            id: string;
            key: string;
        };
        /** UploadWritingImageInput */
        UploadWritingImageInput: {
            id: string;
            fileName: string;
            file: unknown;
        };
        /** DeleteWritingImageInput */
        DeleteWritingImageInput: {
            id: string;
            key: string;
        };
        /** Assignment */
        Assignment: {
            id: string;
            title: string;
            /** @default null */
            dueDate: unknown | null;
            classMemberClassId: string;
            classMemberUserId: string;
            exerciseId: string;
            status: "ASSIGNED" | "SUBMITTED" | "REVIEWED";
            createdAt: unknown;
            updatedAt: unknown;
        };
        /** CreateAssignmentsInput */
        CreateAssignmentsInput: {
            title: string;
            exerciseId: string;
            dueDate?: unknown;
            students: {
                classId: string;
                userId: string;
            }[];
        };
        /** CreateAssignmentsResponse */
        CreateAssignmentsResponse: {
            data: {
                assignments: {
                    id: string;
                    title: string;
                    /** @default null */
                    dueDate: unknown | null;
                    classMemberClassId: string;
                    classMemberUserId: string;
                    exerciseId: string;
                    status: "ASSIGNED" | "SUBMITTED" | "REVIEWED";
                    createdAt: unknown;
                    updatedAt: unknown;
                }[];
            };
            message: string;
        };
        /** GetAssignmentsByExerciseResponse */
        GetAssignmentsByExerciseResponse: {
            data: {
                assignments: {
                    assignment: {
                        id: string;
                        title: string;
                        /** @default null */
                        dueDate: unknown | null;
                        classMemberClassId: string;
                        classMemberUserId: string;
                        exerciseId: string;
                        status: "ASSIGNED" | "SUBMITTED" | "REVIEWED";
                        createdAt: unknown;
                        updatedAt: unknown;
                    };
                    user: {
                        id: string;
                        email: string;
                        /** @default null */
                        username: string | null;
                        /** @default null */
                        firstName: string | null;
                        /** @default null */
                        lastName: string | null;
                        centerId: string;
                        role: "ADMIN" | "TEACHER" | "STUDENT";
                        /** @default null */
                        phoneNumber: string | null;
                        createdAt: unknown;
                        updatedAt: unknown;
                    };
                    class: {
                        id: string;
                        name: string;
                        /** @default null */
                        description: string | null;
                        createdAt: unknown;
                        updatedAt: unknown;
                    };
                }[];
            };
            message: string;
        };
        /** GetAssignmentByUserInput */
        GetAssignmentByUserInput: {
            userId: string;
            take: number;
            cursor?: string;
            searchString?: string;
        };
        /** Submission */
        Submission: {
            id: string;
            assignmentId: string;
            content: unknown;
            grade: unknown;
            feedback: unknown;
            createdAt: unknown;
            updatedAt: unknown;
        };
        /** CreateSubmissionInput */
        CreateSubmissionInput: {
            assignmentId: string;
            content: unknown;
        };
        /** SubmissionContent */
        SubmissionContent: {
            value: unknown;
        } | {
            tasks: {
                order: number;
                questions: {
                    order: number;
                    /** @default null */
                    answer: string | null;
                }[];
            }[];
        } | {
            tasks: {
                order: number;
                questions: {
                    order: number;
                    /** @default null */
                    answer: string | null;
                }[];
            }[];
        };
        /** WritingSubmissionContent */
        WritingSubmissionContent: {
            value: unknown;
        };
        /** ReadingSubmissionContent */
        ReadingSubmissionContent: {
            tasks: {
                order: number;
                questions: {
                    order: number;
                    /** @default null */
                    answer: string | null;
                }[];
            }[];
        };
        /** ListeningSubmissionContent */
        ListeningSubmissionContent: {
            tasks: {
                order: number;
                questions: {
                    order: number;
                    /** @default null */
                    answer: string | null;
                }[];
            }[];
        };
        /** SubmissionGradeSchema */
        SubmissionGradeSchema: {
            score: number;
            total: number;
        } | {
            score: number;
            total: number;
        } | {
            taskAchievement: number;
            taskAchievementComment: string;
            coherenceAndCohesion: number;
            coherenceAndCohesionComment: string;
            lexicalResource: number;
            lexicalResourceComment: string;
            grammaticalRangeAndAccuracy: number;
            grammaticalRangeAndAccuracyComment: string;
        };
        /** ReadingSubmissionGrade */
        ReadingSubmissionGrade: {
            score: number;
            total: number;
        };
        /** ListeningSubmissionGrade */
        ListeningSubmissionGrade: {
            score: number;
            total: number;
        };
        /** WritingSubmissionGrade */
        WritingSubmissionGrade: {
            taskAchievement: number;
            taskAchievementComment: string;
            coherenceAndCohesion: number;
            coherenceAndCohesionComment: string;
            lexicalResource: number;
            lexicalResourceComment: string;
            grammaticalRangeAndAccuracy: number;
            grammaticalRangeAndAccuracyComment: string;
        };
        /** SubmissionFeedback */
        SubmissionFeedback: {
            comments: {
                id: string;
                selectedText: string;
                from: number;
                to: number;
                comment: string;
                author: string;
                createdAt: string;
                updatedAt: string;
            }[];
        } | {
            feedback: string;
        } | {
            feedback: string;
        };
        /** WritingSubmissionFeedback */
        WritingSubmissionFeedback: {
            comments: {
                id: string;
                selectedText: string;
                from: number;
                to: number;
                comment: string;
                author: string;
                createdAt: string;
                updatedAt: string;
            }[];
        };
        /** WritingComment */
        WritingComment: {
            id: string;
            selectedText: string;
            from: number;
            to: number;
            comment: string;
            author: string;
            createdAt: string;
            updatedAt: string;
        };
        /** ReadingSubmissionFeedback */
        ReadingSubmissionFeedback: {
            feedback: string;
        };
        /** ListeningSubmissionFeedback */
        ListeningSubmissionFeedback: {
            feedback: string;
        };
        /** UpdateSubmissionInput */
        UpdateSubmissionInput: {
            id: string;
            content?: unknown;
            grade?: unknown;
            feedback?: unknown;
            isReviewed?: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
